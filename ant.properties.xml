<?xml version="1.0" encoding="UTF-8"?>
<!--
  - Authors:  Florian JUGE <florian.juge@altran.com> and Baptiste CORVE <baptiste.corve@altran.com> 
              Updated on November 2016: Sebastien AUFFRET <sebastien.auffret@altran.com>
  - Description: This file contains all the different parameters which are used in the various scripts
-->

<project name="handbook"> 
	<!-- ============================================================================= -->
	<!-- Main parameters -->
	<!-- ============================================================================= -->
	
	<!-- List of projects: The first project has prioriy for XSD file (and other duplicate filenames) -->
	<property name ="project.list" value="STD" /> <!--String containing the list of project to use for the PDF.
	                                                      Projects are separated by a coma (no space) (for example value="STD,CNE" )
														  Each project is a subfolder of src_handbook folder (set ind property "folder.src") -->
														  
	<property name="file.handbookPDF_name" value="handbook_STD_Edition" /> <!-- Final name of the handbook, without extension .pdf -->
	<property name="file.subtitle_edition" value="Standard Edition" /> <!-- Subtitle of PDF to indicate Standard Edition or Custom Edition Information -->
	<property name="pdf.enable.sonarqube" value="true" />  <!-- This parameter enable or disable the export sonarqube part in the pdf -->
	
	<!-- ============================================================================= -->
	<!-- Project settings: Folders -->
	<!-- ============================================================================= -->
	<property name="folder.src" value="src_handbook" /> <!-- input folder -->
	<property name="folder.out" value="output" /> <!-- output folder -->
	<property name="folder.work" value="work" /> <!-- work folder -->
	<property name="folder.xsd" value="XSD" />
	<property name="folder.partial.images" value="Extras/Images" />
	<property name="folder.partial.vhdl" value="Extras/VHDL" />
	<property name="folder.partial.rulesets" value="Rulesets" />
	<property name="folder.scripts" value="Scripts" /> <!-- scripts folder -->
	<property name="folder.home" value="../" /> <!-- home folder - used for the individual builds-->
	
	<property name="folder.vhdl" value="${folder.home}/${folder.out}/${folder.work}/${folder.partial.vhdl}/" /> <!-- VHDL folder from stylesheet folder-->
	<property name="folder.text" value="${folder.home}/Text/" /> <!-- Text folder from stylesheet folder-->
	<property name="folder.images" value="${folder.home}/${folder.out}/${folder.work}/${folder.partial.images}/" /> <!-- Images folder from script source folder-->
	<property name="folder.ruleset" value="${folder.home}/${folder.out}/${folder.work}/${folder.partial.rulesets}" /> <!-- RuleSet folder from stylesheet folder-->
	<property name="folder.out.temp" value="${folder.home}/${folder.out}/TEMP" /> <!-- temp folder -->
	<property name="folder.stylesheet" value="${folder.home}/stylesheets" /> <!-- stylesheet folder -->	

	<!-- Tag between which is the VHDL code to be embedded in the handbook -->
	<property name="VHDL.tag" value="--CODE" />
	
	<!-- Input file settings -->
	<property name="file.main_name" value="handbook_header_for_STD" /> <!-- input file, this file have to contain one RuleSetHist field, this RuleSetHist is the kept RuleSetHist after merging -->
	<property name="file.main_name_extension" value="xml" /> <!-- Input file extension -->
	<property name="file.export_std_rules_pdf" value="true" /> <!-- Standart rules present in RuleSet folder? -->
	<property name="file.export_custom_rules_pdf" value="true" /> <!-- Custom rules present in RuleSet folder? -->
	
	
	<!-- ============================================================================= -->
	<!-- Stylesheets -->
	<!-- ============================================================================= -->
	<!-- merge stylesheet -->
	<property name="file.xsl.merge" value="${folder.stylesheet}/merge.xsl" /> <!-- stylesheet for the script: merge -->
	
	<!-- sorting stylesheet -->
	<property name="file.xsl.sorting" value="${folder.stylesheet}/sorting.xsl" /> <!-- stylesheet for the script: sorting -->
	
	<!-- convert2docbook stylesheet -->
	<property name="file.xsl.convert2docbook" value="${folder.stylesheet}/convert2docbook.xsl" /> <!-- stylesheet for the script: sorting -->
	<!-- builddocbook stylesheet -->
	<property name="file.xsl.fopCustomization" value="${folder.stylesheet}/FopCustomization.xsl" /> <!-- stylesheet for the script: buid docbook (fop customization) -->
	
	<!-- docbook stylesheet -->
	<property name="docbook.xsl.dir" value="${folder.stylesheet}/docbook" />
	<property name="fo.stylesheet" value="${docbook.xsl.dir}/fo/docbook.xsl" /> <!-- FO stylesheet for docbook -->

	<!-- ============================================================================= -->
	<!-- Libraries path -->
	<!-- ============================================================================= -->
	<property name="saxon.lib.dir" value="${folder.home}/lib/SaxonHE9-7-0-10J" />
	<property name="fop.home" value="${folder.home}/lib/fop-2.1" />
	
	<!-- Classpath for the different libraries -->
	<path id="saxon.classpath">
		<fileset dir="${saxon.lib.dir}" id="saxon.fileset">
			<include name="*.jar" />
		</fileset>
	</path>
	
</project>